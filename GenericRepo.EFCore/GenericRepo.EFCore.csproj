<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Description>A package that can be used to implement a generic repository for Entity Framework Core. Includes both syncronous and asynchronous methods.</Description>
    <PackageIcon>NetcodrIcon256px.png</PackageIcon>
    <PackageIconUrl />
    <PackageProjectUrl>https://github.com/Netcodr81/GenericRepo.EFCore</PackageProjectUrl>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <Authors>Mike Eckel</Authors>
    <Company>NetCodr81</Company>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <FileVersion>1.2.0.0</FileVersion>
    <PackageReleaseNotes>The included properties parameter updated from string[]  to an params Expression&lt;Func&lt;TEntity,objec&gt;&gt;[]. This allows user to use linq to include properties like they would if using EF Core's Include method. The order by parameter was removed from the Get and GetAsync methods. If you need it, continue to use v 1.0.0. An example of how to use the includes can be found on the project site.</PackageReleaseNotes>
    <Version>2.0.0</Version>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\LICENSE">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="..\NetcodrIcon256px.png">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="5.0.8" />
  </ItemGroup>

</Project>
